<touchégg>
	
	<!--
		Chromebook Nautilus Desktop notes:
		From: https://github.com/ghodulik95/chromebook-nautilus-desktop
    This project is not affiliated or endorsed by Google or Samsung.
		Much/most of this file is the touché default conf, at least until gestures
		are specified.
  -->

  <settings>
    <!-- 
      Delay, in milliseconds, since the gesture starts before the animation is displayed.
      Default: 150ms if this property is not set.
      Example: Use the MAXIMIZE_RESTORE_WINDOW action. You will notice that no animation is
      displayed if you complete the action quick enough. This property configures that time.
    -->
    <property name="animation_delay">150</property>

    <!--
      Percentage of the gesture to be completed to apply the action. Set to 0 to execute actions unconditionally.
      Default: 20% if this property is not set.
      Example: Use the MAXIMIZE_RESTORE_WINDOW action. You will notice that, even if the
      animation is displayed, the action is not executed if you did not move your fingers far
      enough. This property configures the percentage of the gesture that must be reached to
      execute the action.
    -->
    <property name="action_execute_threshold">20</property>

    <!--
      Global animation colors can be configured to match your system colors using HEX notation:

        <color>909090</color>
        <borderColor>FFFFFF</borderColor>

      You can also use auto:

        <property name="color">auto</property>
        <property name="borderColor">auto</property>

      Notice that you can override an specific animation color.
    -->
    <property name="color">auto</property>
    <property name="borderColor">auto</property>
  </settings>

  <!--
    Configuration for every application.
    Web browsers have a special section below, so these are the gestures
    for non-browser applications, or for browser applications when there
    is no definition of the gesture in the browsers section.

    All applications maximize on swipe up.
    Non-browser applications minimize on swipe down.
    Browser applications will refresh on swipe down.
    All applications on swipe left or right do the XF86Back/Forward keys
      and browsers will additionally do a cutesy animation via the ~/bin/gesture-flash.sh script
  -->
  <application name="All">
    <gesture type="SWIPE" fingers="3" direction="UP">
      <action type="MAXIMIZE_RESTORE_WINDOW">
        <animate>true</animate>
      </action>
    </gesture>

    <gesture type="SWIPE" fingers="3" direction="DOWN">
      <action type="MINIMIZE_WINDOW">
        <animate>true</animate>
      </action>
    </gesture>
  
    <gesture type="SWIPE" fingers="3" direction="RIGHT">
      <action type="RUN_COMMAND">
        <repeat>false</repeat>
        <command>xdotool key XF86Back</command>
        <on>begin</on>
      </action>
    </gesture>

    <gesture type="SWIPE" fingers="3" direction="LEFT">
      <action type="RUN_COMMAND">
        <repeat>false</repeat>
        <command>xdotool key XF86Forward</command>
        <on>begin</on>
      </action>
    </gesture> 


  </application>

  <!--
    Configuration for specific applications.
  -->

  <!--
    Configuration for web browsers.
    Adding support for more web browsers is easy:
    1. Install the browser.
    2. Open the browser.
    3. While the browser is visible somewhere on screen, run the command
        xprop | grep WM_CLASS
    4. Before clicking something else, click on the browser window. The output should look something like:
        WM_CLASS(STRING) = "Falkon Browser", "Falkon"
    5. Simply append the second string into the comma-delimited name property of the <application> tag
       below and save! Viola! No restarting should be required.

    These gestures enable:
      - Swipe down to refresh (Control+R)
      - Swipe left to go forward (Alt+Right Arrow)
      - Swipe right to go back (Alt+Left Arrow)
  -->

  <application name="Google-chrome,Chromium-browser,firefox_firefox,Tor Browser,Opera,Vivaldi-stable,Brave-browser,Falkon">
    <gesture type="PINCH" fingers="2" direction="IN">
      <action type="SEND_KEYS">
        <repeat>true</repeat>
        <modifiers>Control_L</modifiers>
        <keys>KP_Subtract</keys>
        <decreaseKeys>KP_Add</decreaseKeys>
      </action>
    </gesture>

    <gesture type="PINCH" fingers="2" direction="OUT">
      <action type="SEND_KEYS">
        <repeat>true</repeat>
        <modifiers>Control_L</modifiers>
        <keys>KP_Add</keys>
        <decreaseKeys>KP_Subtract</decreaseKeys>
      </action>
    </gesture>

    <gesture type="SWIPE" fingers="3" direction="DOWN">
      <action type="RUN_COMMAND">
        <repeat>false</repeat>
        <!-- Without animation: <command>xdotool key ctrl+r</command> -->
        <command>sh -c 'xdotool key ctrl+r && /home/george/bin/gesture-flash.sh refresh'</command>
        <on>begin</on>
      </action>
    </gesture>
  
    <gesture type="SWIPE" fingers="3" direction="RIGHT">
      <action type="RUN_COMMAND">
        <repeat>false</repeat>
        <!-- Without animation <command>xdotool key XF86Back</command> -->
        <command>sh -c 'xdotool key XF86Back && /home/george/bin/gesture-flash.sh left'</command>
        <on>begin</on>
      </action>
    </gesture>

    <gesture type="SWIPE" fingers="3" direction="LEFT">
      <action type="RUN_COMMAND">
        <repeat>false</repeat>
        <!-- Without animation: <command>xdotool key XF86Forward</command> -->
        <command>sh -c 'xdotool key XF86Forward && /home/george/bin/gesture-flash.sh right'</command>
        <on>begin</on>
      </action>
    </gesture> 
  </application>

</touchégg>
